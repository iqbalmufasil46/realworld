name: CD Pipeline with Rollback and Deployment YAML Changes

on:
  push:
    branches:
      - main
      - release/*

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Log in to Azure
    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Step 3: Set up AKS credentials
    - name: Set up AKS credentials
      run: |
        az aks get-credentials --resource-group ConduitResourceGroup --name ConduitAKS

    # Step 4: Apply deployment.yaml if changed
    - name: Apply deployment.yaml if modified
      run: |
        if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q "deployment.yaml"; then
          echo "Detected changes in deployment.yaml. Applying to Kubernetes..."
          kubectl apply -f deployment.yaml
        else
          echo "No changes in deployment.yaml detected. Skipping Kubernetes application."
        fi

    # Step 5: Build and push Docker image to ACR
    - name: Build and push Docker image
      run: |
        az acr login --name conduitacr
        docker build -t conduitacr.azurecr.io/conduit-app:${{ github.sha }} .
        docker push conduitacr.azurecr.io/conduit-app:${{ github.sha }}

    # Step 6: Deploy to AKS with change tracking
    - name: Deploy to AKS
      id: deploy
      run: |
        kubectl set image deployment/conduit-app conduit-app=conduitacr.azurecr.io/conduit-app:${{ github.sha }} --record

    # Step 7: Verify Deployment Rollout
    - name: Install jq
      run: sudo apt-get install -y jq

    - name: Verify Deployment Rollout
      id: verify
      run: |
        # Wait for deployment rollout to complete
        kubectl rollout status deployment conduit-app --timeout=200s

        # Log unhealthy pods
        echo "Checking for unhealthy pods..."
        kubectl get pods --selector=app=conduit-app -o json | jq -r '.items[] | select(.status.phase != "Running") | .metadata.name'

      continue-on-error: true

    # Step 8: Log Failure and Rollback Deployment
    - name: Log deployment failure
      if: failure() && steps.verify.outcome == 'failure'
      run: |
        echo "Deployment verification failed. Pods are not healthy."
        exit 1

    - name: Rollback Deployment
      if: failure() && steps.verify.outcome == 'failure'
      run: |
        echo "Rolling back to the previous stable version..."
        kubectl rollout undo deployment conduit-app
        echo "Rollback complete."

    # Step 9: Final Workflow Status
    - name: Mark workflow as failed if rollback occurred
      if: failure() && steps.verify.outcome == 'failure'
      run: |
        echo "Workflow completed with rollback due to deployment failure."
        exit 1

